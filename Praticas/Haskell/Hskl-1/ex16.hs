converte :: Int -> String
converte 0 = ""
converte 1 = "um"
converte 2 = "dois"
converte 3 = "tres"
converte 4 = "quatro"
converte 5 = "cinco"
converte 6 = "seis"
converte 7 = "sete"
converte 8 = "oito"
converte 9 = "nove"
converte 10 = "dez"
converte 11 = "onze"
converte 12 = "doze"
converte 13 = "treze"
converte 14 = "catorze"
converte 15 = "quinze"
converte 16 = "dezasseis"
converte 17 = "dezassete"
converte 18 = "dezoito"
converte 19 = "dezanove"
converte 20 = "vinte"
converte 30 = "trinta"
converte 40 = "quarenta"
converte 50 = "cinquenta"
converte 60 = "sessenta"
converte 70 = "setenta"
converte 80 = "oitenta"
converte 90 = "noventa"
converte 100 = "cem"
converte 200 = "duzentos"
converte 300 = "trezentos"
converte 400 = "quatrocentos"
converte 500 = "quinhentos"
converte 600 = "seiscentos"
converte 700 = "setescentos"
converte 800 = "oitocentos"
converte 900 = "novecentos"
converte 1000 = "mil"
converte x
         | x < 100 = converte((x `div` 10) * 10) ++ eBetween x 10 ++ converte(x `mod` 10)
         | x > 100 && x < 200 = "cento e " ++ converte(x `mod` 100)
         | x < 1000 = converte((x `div` 100) * 100) ++ eBetween x 100 ++ converte(x `mod` 100)
         | x > 1000 && x < 2000 = "mil e " ++ converte(x `mod` 1000)
         | otherwise = converte(x `div` 1000) ++ " mil" ++ spaceBetween x 1000 ++ converte(x `mod` 1000)
         where spaceBetween y z = if y `mod` z == 0 then "" else " "
               eBetween y z = if y `mod` z == 0 then "" else " e "
